# Generated by Django 4.1.7 on 2023-03-05 18:25

from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DesignPrinciple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principle1', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle2', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle3', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle4', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle5', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle6', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
                ('principle7', django_cryptography.fields.encrypt(models.TextField(blank=True, default=None))),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('role', models.TextField(default='')),
                ('client_id', models.CharField(default=None, max_length=100, primary_key=True, serialize=False)),
                ('consent_form', models.BooleanField(default=False)),
                ('usefulness_for_profession', models.TextField(default='')),
                ('usefulness_for_profession_reason', models.TextField(default='')),
                ('usefulness_for_researcher', models.TextField(default='')),
                ('usefulness_for_researcher_reason', models.TextField(default='')),
                ('design_for_non_western', models.TextField(default='')),
                ('design_for_non_western_reason', models.TextField(default='')),
                ('design_for_western', models.TextField(default='')),
                ('design_for_western_reason', models.TextField(default='')),
                ('feedback', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.BooleanField(default=False)),
                ('no_correlation_reason', models.TextField(blank=True, default='')),
                ('correlation_culture', models.BooleanField(default=False)),
                ('no_correlation_culture_reason', models.TextField(blank=True, default='')),
                ('correlation_ethnicity', models.TextField(default='')),
                ('no_correlation_ethnicity_reason', models.TextField(blank=True, default='')),
                ('correlation_age', models.TextField(default='')),
                ('no_correlation_age_reason', models.TextField(blank=True, default='')),
                ('correlation_nationality', models.TextField(default='')),
                ('no_correlation_nationality_reason', models.TextField(blank=True, default='')),
                ('representation_of_user', models.BooleanField(default=False)),
                ('no_representation_reason', models.TextField(blank=True, default='')),
                ('generalisability', models.BooleanField(default=False)),
                ('no_generalisability_reason', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('role', models.TextField(default='')),
                ('client_id', models.CharField(default=None, max_length=100, primary_key=True, serialize=False)),
                ('age', django_cryptography.fields.encrypt(models.TextField(default='18-19'))),
                ('gender', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('preferred_writing_language', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('preferred_reading_language', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('country', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('nationality', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('ethnicity', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('text_directionality', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('internet_stability', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('broadband_contract', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('age_first_used_technology', django_cryptography.fields.encrypt(models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=10))),
                ('competency_level', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('age_when_first_owned_device', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=10)),
                ('device_ownership_status', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('device_sharing_status', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('device_type_owned', django_cryptography.fields.encrypt(models.JSONField(default=list))),
                ('device_access', django_cryptography.fields.encrypt(models.JSONField(default=list))),
                ('time_personal_home_life', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('good_performance', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('employment', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('pleasant_people', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('work_interesting', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('consulted_by_superiors', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('desirable_area', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('respected_by_family', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('chances_for_promotion', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('keeping_time_for_fun', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('moderation', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('service_to_friend', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('thrift', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('nervous_tense', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('happiness', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('prevention_due_to_circumstances', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('state_of_health', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('proud_citizen', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('contradicting_superior', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('good_manager', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('persistent_efforts', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('organization_structure', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('organization_rules', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('education', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('job', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('consent_form', models.BooleanField(default=False)),
                ('nationality_from_birth', django_cryptography.fields.encrypt(models.TextField(blank=True))),
                ('design_principles', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='survey.designprinciple')),
            ],
        ),
    ]
